微服务模块
    1.建module
    2.改pom
    3.写YML
    4.主启动
    5.业务类

Eureka
    什么是服务治理
        Spring Cloud封装了Netflix公司开发的Eureka模块来实现服务治理
        在传统的rpc远程调用框架中，每个服务与服务之间依赖关系比较复杂，管理比较复杂，所以需要使用服务治理，管理服务与服务之间的依赖关系，可以实行按服务调用、负载均衡、容错等，实现服务发现预注册。
    什么是服务注册与发现
        1.Eureka采用了CS的设计架构，Eureka Server作为服务注册功能的服务器，它是服务注册中心。而系统中的其他微服务，使用Eureka的客户端连接到Eureka Server并维持心跳链接。这样系统的维护人员就可以通过Eureka Server来监控系统中各个微服务是否正常运行。
        2.在服务注册与发现中，有一个注册中心。当服务器启动的时候，会把当前自己服务器的信息 比如 服务器地址通讯地址等一别名的方式注册到注册中心上，另一方（消费者服务提供者），以该别名的方式去注册中心上获取到实际的服务通讯地址，然后在实现本地RPC调用RPC远程调
        用框架中心设计思想：在于注册中心，因为使用注册中心管理每个服务与服务之间的一个依赖关系（服务治理概念）。在任何rpc远程框架中，都会有一个注册中心（存放服务地址相关信息（接口地址））
    Eureka包含两个组件：Eureka Server和Eureka Client
        Eureka Server提供服务注册服务
            各个微服务节点通过配置启动后，会在EurekaServer中进行注册，这样EurekaServer中的服务注册表中将会存储所有可用服务节点的信息，服务节点的信息可以在界面中直接观看到。
        Eureka Client通过注册中心进行访问
            它是一个Java客户端，用于简化EurekaServer的交互，客户端同时也具备一个内置的，使用轮询负载算法的负载均衡器。在应用启动后，将会向EurekaServer发送心跳（默认周期为30秒）。如果EurekaServer在多个心跳周期内没有接收到某个节点的心跳，EurekaServer将会从服务注册表中把这个服务节点移除（默认90秒）
    Eureka集群原理说明：
        服务注册：将服务信息注册近注册中心
        服务发现：从注册中心上获取服务信息
        实质：存key服务名，取value调用地址

        1.先启动Eureka注册中心
        2.启动服务提供者payment支付服务
        3.支付服务启动后会把自身信息（比如服务地址）以别名方式注册进eureka
        4.消费者order服务在需要调用接口时，使用服务别名去注册中心获取实际的RPC远程调用地址。
        5.消费者获得调用地址后，底层实际是利用HttpClient技术实现远程调用
        6.消费者获得服务地址后会缓存在本地JVM中，默认每隔30秒更新一次服务调用地址

        **微服务RPC远程服务调用最核心的是高可用。如果注册中心只有一个，一旦它出现了故障就会导致整个微服务环境不可用，可以搭建Eureka注册中心集群来解决，实现负载均衡+故障容错
        *当多个Eureka同时启用时，他们之间的关系是相互注册，相互守望；实现负载均衡和故障容错